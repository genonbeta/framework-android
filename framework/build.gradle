apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        resourcePrefix "genfw"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}


ext {
    bintrayRepo = 'androidsdk'
    bintrayName = 'genonbeta-framework'

    publishedGroupId = 'com.genonbeta.android'
    libraryName = 'Genonbeta Android Framework'
    artifact = 'framework'

    libraryDescription = 'Framework for Android Application Development'

    siteUrl = 'https://github.com/genonbeta/framework-android'
    gitUrl = 'https://github.com/genonbeta/framework-android.git'

    libraryVersion = rootProject.versionName
    publishVersion = rootProject.versionName

    developerId = 'genonbeta'
    developerName = 'Genonbeta'
    developerEmail = 'genonbeta@gmail.com'

    licenseName = 'General Public Licence, Version 2.0'
    licenseUrl = 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'
    allLicenses = ["GPL-2.0"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation "androidx.appcompat:appcompat:${rootProject.appCompatVersion}"
    implementation "androidx.cardview:cardview:${rootProject.cardViewVersion}"
    implementation "com.google.android.material:material:${rootProject.materialVersion}"
    implementation "androidx.recyclerview:recyclerview:${rootProject.recyclerViewVersion}"

    implementation 'com.genonbeta.android:gdatabase:1.0.2.6'

    implementation "com.github.kevinsawicki:http-request:6.0"
}

group = publishedGroupId
version = rootProject.versionName

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = properties.getProperty("bintray.organization")
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            name = rootProject.versionName
            released = new Date()
            vcsTag = rootProject.versionName
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
